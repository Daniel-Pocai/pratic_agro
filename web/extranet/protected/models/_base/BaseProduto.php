<?php

/**
 * This is the model base class for the table "produto".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Produto".
 *
 * Columns in table "produto" available as properties of the model,
 * followed by relations of table "produto" available as properties of the model.
 *
 * @property integer $idproduto
 * @property string $habilitar
 * @property string $nome
 * @property string $subtitulo
 * @property string $tipo
 * @property integer $posicao
 * @property string $descricao
 * @property string $apresentacao
 * @property string $embalagem
 * @property string $dados_produto
 * @property string $principio_ativo
 * @property double $preco_liquido
 * @property double $preco_bruto
 * @property double $diluicao
 * @property string $foto
 * @property string $baixar_pdf
 * @property integer $idcategoria
 *
 * @property HistoricoVendas[] $historicoVendases
 * @property Categoria $categoria
 */
abstract class BaseProduto extends GxActiveRecord {
	
    
        
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'produto';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Produto|Produtos', $n);
	}

	public static function representingColumn() {
		return array('nome');
	}

	public function rules() {
		return array(
			array('habilitar, idcategoria', 'required'),
			array('posicao, idcategoria', 'numerical', 'integerOnly'=>true),
			array('preco_liquido, preco_bruto, diluicao', 'numerical', 'message' => 'Deve ser um número válido. Use vírgula para separar decimais.'),
			array('habilitar', 'length', 'max'=>1),
			array('nome, apresentacao, embalagem', 'length', 'max'=>100),
			array('tipo, principio_ativo', 'length', 'max'=>150),
			array('foto', 'length', 'max'=>160),
			array('baixar_pdf', 'length', 'max'=>140),
			array('subtitulo, descricao, dados_produto', 'safe'),
			array('nome, subtitulo, tipo, posicao, descricao, apresentacao, embalagem, dados_produto, principio_ativo, preco_liquido, preco_bruto, diluicao, foto, baixar_pdf', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idproduto, habilitar, nome, subtitulo, tipo, posicao, descricao, apresentacao, embalagem, dados_produto, principio_ativo, preco_liquido, preco_bruto, diluicao, foto, baixar_pdf, idcategoria', 'safe', 'on'=>'search'),
		);
	}
	

	public function relations() {
		return array(
			'historicoVendases' => array(self::HAS_MANY, 'HistoricoVendas', 'idproduto'),
			'categoria' => array(self::BELONGS_TO, 'Categoria', 'idcategoria'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idproduto' => Yii::t('app', 'Idproduto'),
			'habilitar' => Yii::t('app', 'Habilitar'),
			'nome' => Yii::t('app', 'Nome'),
			'subtitulo' => Yii::t('app', 'Subtítulo'),
			'tipo' => Yii::t('app', 'Tipo'),
			'posicao' => Yii::t('app', 'Posição'),
			'descricao' => Yii::t('app', 'Descrição'),
			'apresentacao' => Yii::t('app', 'Apresentação ( separando por virgula para mais tipo)'),
			'embalagem' => Yii::t('app', 'Embalagem'),
			'dados_produto' => Yii::t('app', 'Dados do Produto'),
			'principio_ativo' => Yii::t('app', 'Princípio Ativo'),
			'preco_liquido' => Yii::t('app', 'Preço Liquido (em Dólar)'),
			'preco_bruto' => Yii::t('app', 'Preço Bruto (em Dólar, com Aliquota(PIS/COFINS))'),
			'diluicao' => Yii::t('app', 'Diluição (LITROS)'),
			'foto' => Yii::t('app', 'Foto'),
			'baixar_pdf' => Yii::t('app', 'Baixar Pdf'),
			'idcategoria' => null,
			'historicoVendases' => null,
			'categoria' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idproduto', $this->idproduto);
		$criteria->compare('habilitar', $this->habilitar, true);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('subtitulo', $this->subtitulo, true);
		$criteria->compare('tipo', $this->tipo, true);
		$criteria->compare('posicao', $this->posicao);
		$criteria->compare('descricao', $this->descricao, true);
		$criteria->compare('apresentacao', $this->apresentacao, true);
		$criteria->compare('embalagem', $this->embalagem, true);
		$criteria->compare('dados_produto', $this->dados_produto, true);
		$criteria->compare('principio_ativo', $this->principio_ativo, true);
		$criteria->compare('preco_liquido', $this->preco_liquido);
		$criteria->compare('preco_bruto', $this->preco_bruto);
		$criteria->compare('diluicao', $this->diluicao);
		$criteria->compare('foto', $this->foto, true);
		$criteria->compare('baixar_pdf', $this->baixar_pdf, true);
		$criteria->compare('idcategoria', $this->idcategoria);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}